reset;

option solver cplexamp;

param iter;
param i_alea;
param j_alea;
param fin;
param carte_reserve integer;

model declaration_rummikub.ampl.mod;
data instance_rummikub.ampl.dat;
model build_groups.ampl.dat;
model model.mod;

let carte_reserve := NB_NUM*NB_COUL - sum {m in 1..NB_NUM, n in 1..NB_COUL} (carte_main[m,n] + carte_table[m,n]);

printf"\nCarte_reserve: %d \n", carte_reserve;

let iter := 0;
repeat until carte_reserve = 0 {
	printf "\nIteration %d \n", iter;
	
	solve;
	printf"\nCarte_table: \n";
	for{m in 1..NB_NUM} {
		for{n in 1..NB_COUL} {
			let carte_table[m,n] := carte_table[m,n] + y[m,n];
			let carte_main[m,n] := carte_main[m,n] - y[m,n];
			printf"%d ", carte_table[m,n];
		}
		printf"\n";
	}
	
	printf"\nCarte_main: \n";
	for{m in 1..NB_NUM} {
		for{n in 1..NB_COUL} {
			printf"%d ", carte_main[m,n];
		}
		printf"\n";
	}
	
	commands alea.com.mod;
	let carte_main[i_alea, j_alea] := 1;
	let carte_reserve := carte_reserve - 1;
	printf"\nCarte_reserve: %d \n", carte_reserve;
	let iter := iter + 1;
}
